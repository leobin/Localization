/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * BrowseDataTypePanel.java
 *
 * Created on Feb 10, 2011, 10:20:17 PM
 */
package com.localization.application.panel;

import com.localization.application.panel.item.DataTypePanel;
import com.localization.manager.DataTypeDataManagement;
import java.util.ArrayList;
import localization.data.entity.contentobject.DataTypeDataObject;

/**
 *
 * @author leobint
 */
public class BrowseDataTypePanel extends LocalizationPanel {

    /** Creates new form BrowseDataTypePanel */
    public BrowseDataTypePanel() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        panelListDataType = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();

        panelListDataType.setLayout(new javax.swing.BoxLayout(panelListDataType, javax.swing.BoxLayout.PAGE_AXIS));
        jScrollPane1.setViewportView(panelListDataType);

        jLabel1.setText("Browse DataType");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 468, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(175, 175, 175)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(187, 187, 187))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 272, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel panelListDataType;
    // End of variables declaration//GEN-END:variables
    public static boolean isEdited = false;

    @Override
    public void reload() {
        ArrayList<DataTypeDataObject> allDataType = DataTypeDataManagement.getAllDataType();
        System.out.println(panelListDataType.getComponents().length);
        System.out.println(allDataType.size());
        if (panelListDataType.getComponents().length < allDataType.size()) {
            for (int j = panelListDataType.getComponents().length; j < allDataType.size(); j++) {
                DataTypeDataObject dataType = allDataType.get(j);
                DataTypePanel dataTypePanel = new DataTypePanel(dataType);
                dataTypePanel.setVisible(true);
                panelListDataType.add(dataTypePanel);
            }
        } else {
            if (panelListDataType.getComponents().length > allDataType.size()) {
                for (int j = 0; j < panelListDataType.getComponents().length; j++) {
                    DataTypePanel dataTypePanel = (DataTypePanel) panelListDataType.getComponent(j);
                    if (dataTypePanel.isRemove) {
                        panelListDataType.remove(j);
                    }
                }
            }
        }

        if (isEdited) {
            for (int j = 0; j < panelListDataType.getComponents().length; j++) {
                DataTypePanel DataTypePanel = (DataTypePanel) panelListDataType.getComponent(j);
                DataTypePanel.reload();
            }
            isEdited = false;
        }
        updateView();
    }

    /**
     * init other components
     */
    private void initOtherComponents() {
        try {
            ArrayList<DataTypeDataObject> allDataType = DataTypeDataManagement.getAllDataType();

            for (int i = 0; i < allDataType.size(); i++) {
                DataTypeDataObject dataType = allDataType.get(i);
                DataTypePanel dataTypePanel = new DataTypePanel(dataType);
                dataTypePanel.setVisible(true);
                panelListDataType.add(dataTypePanel);
            }
            updateView();
        } catch (Exception e) {
            System.out.println("Problem in loading init browse dataType form");
        }
    }

    private void updateView() {
        panelListDataType.invalidate();
        panelListDataType.updateUI();
    }
}
