/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * CreateAlgorithmPanel.java
 *
 * Created on Feb 17, 2011, 8:57:41 PM
 */
package com.localization.application.panel.forframe;

import com.localization.application.CardLayoutHandlerFunction;
import com.localization.application.LocalizationMain;
import com.localization.manager.AlgorithmDataManagement;
import com.localization.manager.DataTypeDataManagement;
import com.localization.other.ApplicationConfiguration;
import com.localization.other.PackageReader;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JDialog;
import localization.data.entity.contentobject.AlgorithmDataObject;
import localization.data.entity.contentobject.DataTypeDataObject;

/**
 * 
 * @author leobint
 */
public class CreateAlgorithmPanel extends javax.swing.JPanel {

	private JDialog parent;
	private boolean isEdit = false;
	private AlgorithmDataObject algorithm;

	/** Creates new form CreateAlgorithmPanel */
	public CreateAlgorithmPanel(JDialog parent, AlgorithmDataObject algorithm) {
		this.parent = parent;
		this.algorithm = algorithm;

		initComponents();

		try {
			initOtherComponents();
		} catch (ClassNotFoundException ex) {
			Logger.getLogger(CreateAlgorithmPanel.class.getName()).log(
					Level.SEVERE, null, ex);
		} catch (IOException ex) {
			Logger.getLogger(CreateAlgorithmPanel.class.getName()).log(
					Level.SEVERE, null, ex);
		}
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed"
	// desc="Generated Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		jLabel1 = new javax.swing.JLabel();
		inputName = new javax.swing.JTextField();
		jLabel2 = new javax.swing.JLabel();
		jScrollPane1 = new javax.swing.JScrollPane();
		inputDescription = new javax.swing.JTextArea();
		inputClass = new javax.swing.JComboBox();
		jLabel3 = new javax.swing.JLabel();
		jLabel4 = new javax.swing.JLabel();
		inputDataType = new javax.swing.JComboBox();
		buttonCreate = new javax.swing.JButton();
		buttonCancel = new javax.swing.JButton();

		jLabel1.setText("Name");

		jLabel2.setText("Description");

		inputDescription.setColumns(20);
		inputDescription.setRows(5);
		jScrollPane1.setViewportView(inputDescription);

		inputClass.setModel(new javax.swing.DefaultComboBoxModel(new String[] {
				"Item 1", "Item 2", "Item 3", "Item 4" }));

		jLabel3.setText("Class");

		jLabel4.setText("DataType");

		inputDataType.setModel(new javax.swing.DefaultComboBoxModel(
				new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

		buttonCreate.setText("Create");
		buttonCreate.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				buttonCreateActionPerformed(evt);
			}
		});

		buttonCancel.setText("Cancel");
		buttonCancel.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				buttonCancelActionPerformed(evt);
			}
		});

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
		this.setLayout(layout);
		layout.setHorizontalGroup(layout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(
						layout.createSequentialGroup()
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.LEADING)
												.addGroup(
														layout.createSequentialGroup()
																.addContainerGap()
																.addGroup(
																		layout.createParallelGroup(
																				javax.swing.GroupLayout.Alignment.LEADING)
																				.addComponent(
																						jLabel1)
																				.addComponent(
																						jLabel2)
																				.addComponent(
																						jLabel3)
																				.addComponent(
																						jLabel4))
																.addPreferredGap(
																		javax.swing.LayoutStyle.ComponentPlacement.RELATED,
																		34,
																		Short.MAX_VALUE)
																.addGroup(
																		layout.createParallelGroup(
																				javax.swing.GroupLayout.Alignment.LEADING,
																				false)
																				.addComponent(
																						inputDataType,
																						0,
																						javax.swing.GroupLayout.DEFAULT_SIZE,
																						Short.MAX_VALUE)
																				.addComponent(
																						inputClass,
																						0,
																						javax.swing.GroupLayout.DEFAULT_SIZE,
																						Short.MAX_VALUE)
																				.addComponent(
																						inputName,
																						javax.swing.GroupLayout.Alignment.TRAILING)
																				.addComponent(
																						jScrollPane1,
																						javax.swing.GroupLayout.Alignment.TRAILING)))
												.addGroup(
														layout.createSequentialGroup()
																.addGap(74, 74,
																		74)
																.addComponent(
																		buttonCreate,
																		javax.swing.GroupLayout.PREFERRED_SIZE,
																		98,
																		javax.swing.GroupLayout.PREFERRED_SIZE)
																.addPreferredGap(
																		javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
																.addComponent(
																		buttonCancel,
																		javax.swing.GroupLayout.PREFERRED_SIZE,
																		101,
																		javax.swing.GroupLayout.PREFERRED_SIZE)))
								.addContainerGap()));
		layout.setVerticalGroup(layout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(
						layout.createSequentialGroup()
								.addGap(22, 22, 22)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(jLabel1)
												.addComponent(
														inputName,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE))
								.addGap(18, 18, 18)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.LEADING)
												.addComponent(jLabel2)
												.addComponent(
														jScrollPane1,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE))
								.addGap(18, 18, 18)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(
														inputClass,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(jLabel3))
								.addGap(29, 29, 29)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(jLabel4)
												.addComponent(
														inputDataType,
														javax.swing.GroupLayout.PREFERRED_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.PREFERRED_SIZE))
								.addGap(18, 18, 18)
								.addGroup(
										layout.createParallelGroup(
												javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(buttonCreate)
												.addComponent(buttonCancel))
								.addContainerGap(
										javax.swing.GroupLayout.DEFAULT_SIZE,
										Short.MAX_VALUE)));
	}// </editor-fold>//GEN-END:initComponents

	private void buttonCreateActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_buttonCreateActionPerformed
		// TODO add your handling code here:
		if (this.isEdit) {
			algorithm.setAlgorithmName(inputName.getText());
			algorithm.setAlgorithmDescription(inputDescription.getText());

			algorithm.setAlgorithmClassName((String) inputClass
					.getSelectedItem());
			algorithm.setDataType(((DataTypeDataObject) inputDataType
					.getSelectedItem()));
			AlgorithmDataManagement.updateAlgorithm(algorithm);
		} else {
			algorithm = new AlgorithmDataObject();
			algorithm.setAlgorithmName(inputName.getText());
			algorithm.setAlgorithmDescription(inputDescription.getText());

			algorithm.setAlgorithmClassName((String) inputClass
					.getSelectedItem());
			algorithm.setAlgorithmId(AlgorithmDataManagement
					.addNewAlgorithm(algorithm));

			algorithm.setDataType(((DataTypeDataObject) inputDataType
					.getSelectedItem()));
		}
		this.parent.dispose();
		CardLayoutHandlerFunction
				.changeCardView(LocalizationMain.PANEL_BROWSE_ALGORITHM);
	}// GEN-LAST:event_buttonCreateActionPerformed

	private void buttonCancelActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_buttonCancelActionPerformed
		this.parent.dispose();
	}// GEN-LAST:event_buttonCancelActionPerformed
		// Variables declaration - do not modify//GEN-BEGIN:variables

	private javax.swing.JButton buttonCancel;
	private javax.swing.JButton buttonCreate;
	private javax.swing.JComboBox inputClass;
	private javax.swing.JComboBox inputDataType;
	private javax.swing.JTextArea inputDescription;
	private javax.swing.JTextField inputName;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JLabel jLabel2;
	private javax.swing.JLabel jLabel3;
	private javax.swing.JLabel jLabel4;
	private javax.swing.JScrollPane jScrollPane1;

	// End of variables declaration//GEN-END:variables

	private void initOtherComponents() throws ClassNotFoundException,
			IOException {
		// init list algorithm class
		// Class[] classes = PackageReader.getClasses("com.localization.other");
		String[] className = PackageReader
				.getClassName(ApplicationConfiguration.load().algorithmPackage);
		DefaultComboBoxModel defaultComboBoxModel = new DefaultComboBoxModel(
				className);
		inputClass.setModel(defaultComboBoxModel);
		// init list data type
		ArrayList<DataTypeDataObject> allDataType = DataTypeDataManagement
				.getAllDataType();
		DefaultComboBoxModel defaultComboBoxModelDataType = new DefaultComboBoxModel(
				allDataType.toArray());
		inputDataType.setModel(defaultComboBoxModelDataType);

		if (this.algorithm != null) {
			inputName.setText(algorithm.getAlgorithmName());
			inputDescription.setText(algorithm.getAlgorithmDescription());

			// init selected class for algorithm
			int selectedClassIndex = 0;
			String selectedClassName = algorithm.getAlgorithmClassName();
			while (selectedClassIndex < className.length) {
				if (selectedClassName.equals(className[selectedClassIndex])) {
					break;
				}
				selectedClassIndex++;
			}
			if (selectedClassIndex < className.length) {
				inputClass.setSelectedIndex(selectedClassIndex);
			}

			inputDataType.setSelectedItem(algorithm.getDataType());

			this.isEdit = true;
			buttonCreate.setText("Edit");
		}
	}
}
